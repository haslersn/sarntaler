contract {
	sarn sar;
	int globalx;
}

//Testprogram for basic contract features
int test(int x){
	address a;
	sarn s; // sarns are nonnegative integers (uint)
	int i;
	i = 0;
	x = 1;
	s = 4711;
	// create takes sarns from the balance and creates an account
	//     whose address it returns
	a = create(s); 

	s = contract.sar;
	contract.globalx = x;

	while(i < 1){
		x = x % 2;
		i = i + 1;
	}
	//messages come with an associated account
	msg.account; 
	// a of type address
	a.balance; 
	// the address of contract c
	c.account; 

	// s is sarn, a is address, a receives s sarns from contracts balance<
	a.transfer(s);
	// call contract a's method with name 'method', paying with s sarns 
	//     from the this contracts and the params 1 and x
	a.method(s,1,x);

	return x;
}